
* Tokenizer

** DONE add comment support

** DONE add doctype support

** factor saxg code

   most sub generators are the same

** monadic parser ?

** objectional parser ?
   - no more explicit stateful stack recursion
   - A Root object walk the stream. On certain conditions, it
     will pass parsing to a new subclass (passing himself in need of
     recursion, REDUCE, SELF INSERT)

     Root.parse -> {...}, (Text | Inst | ...).parse -> ...

* XML parser

** DONE Stream of inst | otag | etag | text | ... -> Tree

   stack shift reduce

   inst -> top.append it
   otag -> push (Tag. ...)
   text -> top.append it
   comm -> top.append it
   doct -> top.append it
   etag -> t = pop; top.append it

** DONE Bug: cycle in tree construction
   see commit e655648

** DONE Bug: non supported xml objects impedes reduction

   <!-- .... --> is seen as a tag, thus absorbs subsequent nodes,
   confusing the recursive logic.

   Better hypothesis: self-closing tags appending linearly since no
   etag to reduce.

   Solution: tokenizer could issue both ('otag', ...) then ('etag', ...)
   on the fly. *Tokenizing sugar*...

   Bug fixed (80% confidence)
